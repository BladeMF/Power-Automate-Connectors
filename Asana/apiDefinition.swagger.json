{
  "swagger": "2.0",
  "info": {
    "title": "Asana 2",
    "description": "",
    "version": "1.0"
  },
  "host": "app.asana.com",
  "basePath": "/api/1.0",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "definitions": {
    "NullType": {
      "enum": [
        "null"
      ]
    },
    "TaskCompact": {
      "description": "The *task* is the basic object around which many operations in Asana are centered.",
      "type": "object",
      "properties": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": "string",
          "readOnly": true,
          "example": "12345",
          "x-insert-after": false
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": "string",
          "readOnly": true,
          "example": "task",
          "x-insert-after": "gid"
        },
        "name": {
          "description": "The name of the task.",
          "type": "string",
          "example": "Bug Task"
        },
        "resource_subtype": {
          "type": "string",
          "description": "",
          "enum": [
            "default_task",
            "milestone",
            "section",
            "approval"
          ]
        },
        "created_by": {
          "type": "object",
          "readOnly": true,
          "description": "",
          "properties": {
            "gid": {
              "description": "Globally unique identifier of the resource.",
              "type": "string",
              "example": "1111"
            },
            "resource_type": {
              "description": "The type of resource.",
              "type": "string",
              "example": "user"
            }
          }
        }
      }
    },
    "NextPage": {
      "type": "object",
      "description": "Conditional. This property is only present when a limit query parameter is provided in the request.",
      "properties": {
        "offset": {
          "type": "string",
          "readOnly": true,
          "description": "Pagination offset for the request.",
          "example": "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9"
        },
        "path": {
          "type": "string",
          "readOnly": true,
          "description": "",
          "example": "/tasks/12345/attachments?limit=2&offset=eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9"
        },
        "uri": {
          "type": "string",
          "format": "uri",
          "readOnly": true,
          "description": "A full uri containing the query parameters to fetch for next_page",
          "example": "https://app.asana.com/api/1.0/tasks/12345/attachments?limit=2&offset=eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9"
        }
      }
    },
    "ErrorResponse": {
      "description": "",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "",
          "example": "project: Missing input"
        },
        "help": {
          "type": "string",
          "readOnly": true,
          "description": ""
        },
        "phrase": {
          "type": "string",
          "readOnly": true,
          "description": "",
          "example": "6 sad squid snuggle softly"
        }
      }
    },
    "SectionCompact": {
      "description": "",
      "type": "object",
      "properties": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": "string",
          "readOnly": true,
          "example": "12345",
          "x-insert-after": false
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": "string",
          "readOnly": true,
          "example": "section",
          "x-insert-after": "gid"
        },
        "name": {
          "description": "The name of the section (i.e. the text displayed as the section header).",
          "type": "string",
          "example": "Next Actions"
        }
      }
    },
    "UserCompact": {
      "description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.",
      "type": "object",
      "properties": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": "string",
          "readOnly": true,
          "example": "12345",
          "x-insert-after": false
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": "string",
          "readOnly": true,
          "x-insert-after": "gid"
        },
        "name": {
          "type": "string",
          "description": "*Read-only except when same user as requester*. The user\u2019s name."
        }
      }
    },
    "StoryCompact": {
      "description": "A story represents an activity associated with an object in the Asana system.",
      "type": "object",
      "properties": {
        "gid": {
          "description": "Globally unique identifier of the resource, as a string.",
          "type": "string",
          "readOnly": true,
          "example": "12345",
          "x-insert-after": false
        },
        "resource_type": {
          "description": "The base type of this resource.",
          "type": "string",
          "readOnly": true,
          "example": "story",
          "x-insert-after": "gid"
        },
        "created_at": {
          "description": "The time at which this resource was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "example": "2012-02-22T02:06:58.147Z"
        },
        "created_by": {
          "$ref": "#/definitions/UserCompact"
        },
        "resource_subtype": {
          "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.",
          "type": "string",
          "readOnly": true,
          "example": "comment_added"
        },
        "text": {
          "description": "*Create-only*. Human-readable text for the story or comment.\nThis will not include the name of the creator.\n*Note: This is not guaranteed to be stable for a given type of story. For example, text for a reassignment may not always say \u201cassigned to \u2026\u201d as the text for a story can both be edited and change based on the language settings of the user making the request.*\nUse the `resource_subtype` property to discover the action that created the story.",
          "type": "string",
          "example": "marked today"
        }
      }
    }
  },
  "paths": {
    "/projects/{project_gid}/sections": {
      "parameters": [
        {
          "$ref": "#/parameters/project_path_gid"
        },
        {
          "$ref": "#/parameters/pretty"
        }
      ],
      "get": {
        "summary": "Get sections in a project",
        "description": "Returns the compact records for all sections in the specified project.",
        "tags": [
          "Sections"
        ],
        "operationId": "GetSectionsForProject",
        "parameters": [
          {
            "$ref": "#/parameters/project_path_gid"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "name": "opt_fields",
            "in": "query",
            "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "created_at",
                "name",
                "offset",
                "path",
                "project",
                "project.name",
                "projects",
                "projects.name",
                "uri"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved sections in project.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SectionCompact"
                  }
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SectionCompact"
                  }
                },
                "next_page": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/NextPage"
                    },
                    {
                      "$ref": "#/definitions/NullType"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get tasks",
        "description": "Returns the compact task records for some filtered set of tasks. Use one or more of the parameters provided to filter the tasks returned. You must specify a `project` or `tag` if you do not specify `assignee` and `workspace`.",
        "operationId": "GetTasks",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "name": "assignee",
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "project",
            "in": "query",
            "description": "The project to filter tasks on.",
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "section",
            "in": "query",
            "description": "The section to filter tasks on.",
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetSectionsForProject",
              "value-path": "gid",
              "value-collection": "data",
              "value-title": "name",
              "parameters": {
                "project_gid": {
                  "parameter": "project"
                }
              }
            },
            "x-ms-visibility": "important"
          },
          {
            "name": "workspace",
            "in": "query",
            "description": "The workspace to filter tasks on. Note: If you specify `workspace`, you must also specify the `assignee` to filter on.",
            "type": "string"
          },
          {
            "name": "completed_since",
            "in": "query",
            "description": "Only return tasks that are either incomplete or that have been completed since this time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_since",
            "in": "query",
            "description": "Only return tasks that have been modified since the given time. *Note: A task is considered \u201cmodified\u201d if any of its properties change, or associations between it and other objects are modified (e.g. a task being added to a project). A task is not considered modified just because another object it is associated with (e.g. asubtask) is modified. Actions that count as modifying the task include assigning, renaming, completing, and adding stories.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "opt_fields",
            "in": "query",
            "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "actual_time_minutes",
                "approval_status",
                "assignee",
                "assignee.name",
                "assignee_section",
                "assignee_section.name",
                "assignee_status",
                "completed",
                "completed_at",
                "completed_by",
                "completed_by.name",
                "created_at",
                "created_by",
                "custom_fields",
                "custom_fields.asana_created_field",
                "custom_fields.created_by",
                "custom_fields.created_by.name",
                "custom_fields.currency_code",
                "custom_fields.custom_label",
                "custom_fields.custom_label_position",
                "custom_fields.date_value",
                "custom_fields.date_value.date",
                "custom_fields.date_value.date_time",
                "custom_fields.description",
                "custom_fields.display_value",
                "custom_fields.enabled",
                "custom_fields.enum_options",
                "custom_fields.enum_options.color",
                "custom_fields.enum_options.enabled",
                "custom_fields.enum_options.name",
                "custom_fields.enum_value",
                "custom_fields.enum_value.color",
                "custom_fields.enum_value.enabled",
                "custom_fields.enum_value.name",
                "custom_fields.format",
                "custom_fields.has_notifications_enabled",
                "custom_fields.id_prefix",
                "custom_fields.is_formula_field",
                "custom_fields.is_global_to_workspace",
                "custom_fields.is_value_read_only",
                "custom_fields.multi_enum_values",
                "custom_fields.multi_enum_values.color",
                "custom_fields.multi_enum_values.enabled",
                "custom_fields.multi_enum_values.name",
                "custom_fields.name",
                "custom_fields.number_value",
                "custom_fields.people_value",
                "custom_fields.people_value.name",
                "custom_fields.precision",
                "custom_fields.representation_type",
                "custom_fields.resource_subtype",
                "custom_fields.text_value",
                "custom_fields.type",
                "dependencies",
                "dependents",
                "due_at",
                "due_on",
                "external",
                "external.data",
                "followers",
                "followers.name",
                "hearted",
                "hearts",
                "hearts.user",
                "hearts.user.name",
                "html_notes",
                "is_rendered_as_separator",
                "liked",
                "likes",
                "likes.user",
                "likes.user.name",
                "memberships",
                "memberships.project",
                "memberships.project.name",
                "memberships.section",
                "memberships.section.name",
                "modified_at",
                "name",
                "notes",
                "num_hearts",
                "num_likes",
                "num_subtasks",
                "offset",
                "parent",
                "parent.created_by",
                "parent.name",
                "parent.resource_subtype",
                "path",
                "permalink_url",
                "projects",
                "projects.name",
                "resource_subtype",
                "start_at",
                "start_on",
                "tags",
                "tags.name",
                "uri",
                "workspace",
                "workspace.name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved requested tasks.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskCompact"
                  }
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskCompact"
                  }
                },
                "next_page": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/NextPage"
                    },
                    {
                      "$ref": "#/definitions/NullType"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "security": [
          {
            "oauth2-auth": [
              "default"
            ]
          }
        ]
      }
    },
    "/tasks/{task_gid}/stories": {
      "parameters": [
        {
          "$ref": "#/parameters/task_path_gid"
        },
        {
          "$ref": "#/parameters/pretty"
        }
      ],
      "get": {
        "summary": "Get stories from a task",
        "description": "Returns the compact records for all stories on the task.",
        "tags": [
          "Stories"
        ],
        "operationId": "GetStoriesForTask",
        "parameters": [
          {
            "$ref": "#/parameters/task_path_gid"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "name": "opt_fields",
            "in": "query",
            "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "assignee",
                "assignee.name",
                "created_at",
                "created_by",
                "created_by.name",
                "custom_field",
                "custom_field.date_value",
                "custom_field.date_value.date",
                "custom_field.date_value.date_time",
                "custom_field.display_value",
                "custom_field.enabled",
                "custom_field.enum_options",
                "custom_field.enum_options.color",
                "custom_field.enum_options.enabled",
                "custom_field.enum_options.name",
                "custom_field.enum_value",
                "custom_field.enum_value.color",
                "custom_field.enum_value.enabled",
                "custom_field.enum_value.name",
                "custom_field.id_prefix",
                "custom_field.is_formula_field",
                "custom_field.multi_enum_values",
                "custom_field.multi_enum_values.color",
                "custom_field.multi_enum_values.enabled",
                "custom_field.multi_enum_values.name",
                "custom_field.name",
                "custom_field.number_value",
                "custom_field.representation_type",
                "custom_field.resource_subtype",
                "custom_field.text_value",
                "custom_field.type",
                "dependency",
                "dependency.created_by",
                "dependency.name",
                "dependency.resource_subtype",
                "duplicate_of",
                "duplicate_of.created_by",
                "duplicate_of.name",
                "duplicate_of.resource_subtype",
                "duplicated_from",
                "duplicated_from.created_by",
                "duplicated_from.name",
                "duplicated_from.resource_subtype",
                "follower",
                "follower.name",
                "hearted",
                "hearts",
                "hearts.user",
                "hearts.user.name",
                "html_text",
                "is_editable",
                "is_edited",
                "is_pinned",
                "liked",
                "likes",
                "likes.user",
                "likes.user.name",
                "new_approval_status",
                "new_date_value",
                "new_dates",
                "new_dates.due_at",
                "new_dates.due_on",
                "new_dates.start_on",
                "new_enum_value",
                "new_enum_value.color",
                "new_enum_value.enabled",
                "new_enum_value.name",
                "new_multi_enum_values",
                "new_multi_enum_values.color",
                "new_multi_enum_values.enabled",
                "new_multi_enum_values.name",
                "new_name",
                "new_number_value",
                "new_people_value",
                "new_people_value.name",
                "new_resource_subtype",
                "new_section",
                "new_section.name",
                "new_text_value",
                "num_hearts",
                "num_likes",
                "offset",
                "old_approval_status",
                "old_date_value",
                "old_dates",
                "old_dates.due_at",
                "old_dates.due_on",
                "old_dates.start_on",
                "old_enum_value",
                "old_enum_value.color",
                "old_enum_value.enabled",
                "old_enum_value.name",
                "old_multi_enum_values",
                "old_multi_enum_values.color",
                "old_multi_enum_values.enabled",
                "old_multi_enum_values.name",
                "old_name",
                "old_number_value",
                "old_people_value",
                "old_people_value.name",
                "old_resource_subtype",
                "old_section",
                "old_section.name",
                "old_text_value",
                "path",
                "previews",
                "previews.fallback",
                "previews.footer",
                "previews.header",
                "previews.header_link",
                "previews.html_text",
                "previews.text",
                "previews.title",
                "previews.title_link",
                "project",
                "project.name",
                "resource_subtype",
                "source",
                "sticker_name",
                "story",
                "story.created_at",
                "story.created_by",
                "story.created_by.name",
                "story.resource_subtype",
                "story.text",
                "tag",
                "tag.name",
                "target",
                "target.created_by",
                "target.name",
                "target.resource_subtype",
                "task",
                "task.created_by",
                "task.name",
                "task.resource_subtype",
                "text",
                "type",
                "uri"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified task's stories.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StoryCompact"
                  }
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StoryCompact"
                  }
                },
                "next_page": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/NextPage"
                    },
                    {
                      "$ref": "#/definitions/NullType"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        },
        "security": [
          {
            "oauth2-auth": [
              "default"
            ]
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/users": {
      "get": {
        "summary": "Get multiple users",
        "description": "Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter. Results are sorted by user ID.",
        "operationId": "GetUsers",
        "parameters": [
          {
            "name": "workspace",
            "in": "query",
            "description": "The workspace or organization ID to filter users on.",
            "type": "string"
          },
          {
            "name": "team",
            "in": "query",
            "description": "The team ID to filter users on.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/pretty"
          },
          {
            "name": "opt_fields",
            "in": "query",
            "description": "This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "email",
                "name",
                "offset",
                "path",
                "photo",
                "photo.image_1024x1024",
                "photo.image_128x128",
                "photo.image_21x21",
                "photo.image_27x27",
                "photo.image_36x36",
                "photo.image_60x60",
                "uri",
                "workspaces",
                "workspaces.name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved requested user records.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserCompact"
                  }
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserCompact"
                  }
                },
                "next_page": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/NextPage"
                    },
                    {
                      "$ref": "#/definitions/NullType"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalServerError"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "security": [
          {
            "oauth2-auth": [
              "default"
            ]
          }
        ]
      }
    }
  },
  "parameters": {
    "pretty": {
      "name": "opt_pretty",
      "in": "query",
      "description": "",
      "required": false,
      "type": "boolean"
    },
    "limit": {
      "name": "limit",
      "in": "query",
      "description": "",
      "type": "integer",
      "minimum": 1,
      "maximum": 100
    },
    "offset": {
      "name": "offset",
      "in": "query",
      "description": "",
      "type": "string"
    },
    "project_path_gid": {
      "name": "project_gid",
      "in": "path",
      "description": "Globally unique identifier for the project.",
      "required": true,
      "type": "string"
    },
    "task_path_gid": {
      "name": "task_gid",
      "in": "path",
      "required": true,
      "description": "The task to operate on.",
      "type": "string"
    }
  },
  "responses": {
    "GenericErrorResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "BadRequest": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "Unauthorized": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "PaymentRequired": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "Forbidden": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "NotFound": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "TooManyRequests": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "InternalServerError": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "BadGateway": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "ServiceUnavailable": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "GatewayTimeout": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    }
  },
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.asana.com/-/oauth_authorize",
      "tokenUrl": "https://app.asana.com/-/oauth_token",
      "scopes": {
        "default": "default"
      }
    }
  },
  "security": [
    {
      "oauth2-auth": [
        "default"
      ]
    }
  ],
  "tags": []
}