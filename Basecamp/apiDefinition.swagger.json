{
  "swagger": "2.0",
  "info": {
    "title": "Basecamp 4",
    "description": "",
    "version": "1.0"
  },
  "host": "3.basecampapi.com",
  "basePath": "/5848514",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "parameters": {
    "projectId": {
      "name": "projectId",
      "description": "The project id",
      "format": "int64",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-ms-summary": "Project ID",
      "x-ms-dynamic-values": {
        "operationId": "GetProjects",
        "value-path": "id",
        "value-title": "name"
      }
    },
    "columnId": {
      "name": "columnId",
      "description": "The column id",
      "format": "int64",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-ms-summary": "Column ID",
      "x-ms-visibility": "important"
    },
    "cardId": {
      "name": "cardId",
      "description": "The card id",
      "format": "int64",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-ms-summary": "Card ID",
      "x-ms-visibility": "important"
    },
    "todoListId": {
      "name": "listId",
      "description": "The list id",
      "format": "int64",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-ms-summary": "List ID",
      "x-ms-visibility": "important"
    },
    "todoId": {
      "name": "todoId",
      "description": "The to-do id",
      "format": "int64",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-ms-summary": "To-Do ID",
      "x-ms-visibility": "important"
    },
    "recordingId": {
      "name": "recordingId",
      "description": "The recording id",
      "format": "int64",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-ms-summary": "Recording ID",
      "x-ms-visibility": "important"
    },
    "cardTableId": {
      "name": "cardTableId",
      "description": "The card table id",
      "format": "int64",
      "in": "path",
      "required": true,
      "type": "integer",
      "x-ms-summary": "Card Table ID",
      "x-ms-visibility": "important"
    }
  },
  "paths": {
    "/projects.json": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          }
        },
        "summary": "Get projects",
        "operationId": "GetProjects",
        "description": "Returns a list of all the projects",
        "parameters": []
      }
    },
    "/projects/recordings.json": {
      "get": {
        "summary": "Get recordings",
        "operationId": "GetRecordings",
        "description": "Will return a paginated list of records for the given type of recording.",
        "parameters": [
          {
            "name": "type",
            "description": "Type, which must be Comment, Document, Message, Question::Answer, Schedule::Entry, Todo, Todolist, Upload, or Vault).",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "bucket",
            "description": "Single or comma separated list of project IDs. Default: All active projects visible to the current user.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "description": "Options: active, archived, or trashed. Default: active.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "Options: created_at or updated_at. Default: created_at.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction",
            "description": "Options: desc or asc. Default: desc.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {"type": "integer", "format": "int64"},
                  "type": {"type": "string"}
                }
              }
            }
          }
        }
      }
    },
    "/buckets/{projectId}/card_tables/{cardTableId}.json": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "id": {"type": "integer"},
                "status": {"type": "string"},
                "visible_to_clients": {"type": "boolean"},
                "created_at": {"type": "string"},
                "updated_at": {"type": "string"},
                "title": {"type": "string" },
                "inherits_status": {"type": "boolean" },
                "type": {"type": "string" },
                "url": {"type": "string" },
                "app_url": {"type": "string" },
                "bookmark_url": {"type": "string" },
                "subscription_url": {"type": "string" },
                "bucket": {
                  "$ref": "#/definitions/Bucket"
                },
                "creator": {
                  "$ref": "#/definitions/User"
                },
                "subscribers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "lists": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CardList"
                  }
                }
              }
            }
          }
        },
        "summary": "Get a card table",
        "description": "Will return the card_table with the given ID in the project with the given ID.",
        "operationId": "GetCardTable",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/cardTableId"
          }
        ]
      }
    },
    "/buckets/{projectId}/card_tables/lists/{columnId}/cards.json": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Card"
              }
            }
          }
        },
        "summary": "Get cards in a column",
        "description": "will return a paginated list of cards in the project with an ID of 1 and the column with ID of 3.",
        "operationId": "GetCardsInAColumn",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/columnId"
          }
        ]
      },
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "summary": "Create a card",
        "description": "Creates a card in a table",
        "operationId": "CreateCard",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/columnId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "$ref": "#/definitions/card_title"
                },
                "content": {
                  "$ref": "#/definitions/card_content"
                },
                "due_on": {
                  "$ref": "#/definitions/due_on"
                },
                "notify": {
                  "$ref": "#/definitions/notify"
                }
              },
              "required": [
                "title"
              ]
            }
          }
        ]
      }
    },
    "/buckets/{projectId}/card_tables/cards/{cardId}.json": {
      "put": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update a card",
        "description": "Updates a card in a table",
        "operationId": "UpdateCard",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/cardId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "$ref": "#/definitions/card_title"
                },
                "content": {
                  "$ref": "#/definitions/card_content"
                },
                "due_on": {
                  "$ref": "#/definitions/due_on"
                },
                "assignee_ids": {
                  "$ref": "#/definitions/assignee_ids"
                }
              }
            }
          }
        ]
      }
    },
    "/buckets/{projectId}/card_tables/cards/{cardId}/moves.json": {
      "post": {
        "responses": {
          "204": {
            "description": "Success",
            "schema": {}
          }
        },
        "summary": "Move a card",
        "operationId": "MoveCard",
        "x-ms-visibility": "important",
        "description": "Move a card to a column",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/cardId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "column_id": {
                  "type": "integer",
                  "description": "column_id of the column destination",
                  "title": "Column ID",
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        ]
      }
    },
    "/buckets/{projectId}/todolists/{listId}/todos.json": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Create a to-do",
        "operationId": "CreateToDo",
        "x-ms-visibility": "important",
        "description": "Creates a to-do",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/todoListId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "$ref": "#/definitions/todo_content"
                },
                "description": {
                  "$ref": "#/definitions/todo_description"
                },
                "assignee_ids": {
                  "$ref": "#/definitions/assignee_ids"
                },
                "completion_subscriber_ids": {
                  "$ref": "#/definitions/todo_completion_subscriber_ids"
                },
                "due_on": {
                  "$ref": "#/definitions/due_on"
                },
                "notify": {
                  "$ref": "#/definitions/notify"
                },
                "starts_on": {
                  "$ref": "#/definitions/todo_starts_on"
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "content"
              ]
            },
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/buckets/{projectId}/todos/{todoId}.json": {
      "put": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Update a to-do",
        "operationId": "UpdateToDo",
        "x-ms-visibility": "important",
        "description": "Updates a to-do",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/todoId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "$ref": "#/definitions/todo_content"
                },
                "description": {
                  "$ref": "#/definitions/todo_description"
                },
                "assignee_ids": {
                  "$ref": "#/definitions/assignee_ids"
                },
                "completion_subscriber_ids": {
                  "$ref": "#/definitions/todo_completion_subscriber_ids"
                },
                "due_on": {
                  "$ref": "#/definitions/due_on"
                },
                "notify": {
                  "$ref": "#/definitions/notify"
                },
                "starts_on": {
                  "$ref": "#/definitions/todo_starts_on"
                }
              },
              "x-ms-visibility": "important",
              "required": [
                "content"
              ]
            },
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/buckets/{projectId}/todos/{todoId}/completion.json": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Complete a to-do",
        "operationId": "CompleteToDo",
        "x-ms-visibility": "important",
        "description": "Completes a to-do",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/todoId"
          }
        ]
      }
    },
    "/buckets/{projectId}/recordings/{recordingId}/comments.json": {
      "post": {
        "summary": "Create a comment",
        "description": "Publishes a comment in the project with ID and under the recording with an ID.",
        "operationId": "CreateComment",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/recordingId"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "$ref": "#/definitions/comment_content"
                }
              },
              "required": [
                "content"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        }
      }
    },
    "/buckets/{projectId}/recordings/{recordingId}/status/trashed.json": {
      "put": {
        "summary": "Trash a recording",
        "description": "No parameters required. Returns 204 No Content if successful.",
        "operationId": "TrashARecording",
        "parameters": [
          {
            "$ref": "#/parameters/projectId"
          },
          {
            "$ref": "#/parameters/recordingId"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        }
      }
    },
    "/buckets/{projectId}/webhooks.json": {
      "x-ms-notification-content": {
        "description": "Default response",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "description": "id"
            },
            "kind": {
              "type": "string",
              "description": "kind"
            },
            "details": {
              "type": "object",
              "properties": {
                "copy_id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "copy_id"
                }
              },
              "description": "details"
            },
            "created_at": {
              "type": "string",
              "description": "created_at"
            },
            "copy": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "id"
                },
                "url": {
                  "type": "string",
                  "description": "url"
                },
                "app_url": {
                  "type": "string",
                  "description": "app_url"
                },
                "bucket": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    }
                  },
                  "description": "bucket"
                }
              },
              "description": "copy"
            },
            "recording": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "id"
                }
              },
              "description": "recording"
            },
            "creator": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "description": "id"
                },
                "attachable_sgid": {
                  "type": "string",
                  "description": "attachable_sgid"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "email_address": {
                  "type": "string",
                  "description": "email_address"
                },
                "personable_type": {
                  "type": "string",
                  "description": "personable_type"
                },
                "title": {
                  "type": "string",
                  "description": "title"
                },
                "bio": {
                  "type": "string",
                  "description": "bio"
                },
                "created_at": {
                  "type": "string",
                  "description": "created_at"
                },
                "updated_at": {
                  "type": "string",
                  "description": "updated_at"
                },
                "admin": {
                  "type": "boolean",
                  "description": "admin"
                },
                "owner": {
                  "type": "boolean",
                  "description": "owner"
                },
                "time_zone": {
                  "type": "string",
                  "description": "time_zone"
                },
                "avatar_url": {
                  "type": "string",
                  "description": "avatar_url"
                },
                "company": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "id"
                    },
                    "name": {
                      "type": "string",
                      "description": "name"
                    }
                  },
                  "description": "company"
                }
              },
              "description": "creator"
            }
          }
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "OK"
          }
        },
        "x-ms-trigger": "single",
        "summary": "Webhook",
        "description": "Webhook",
        "operationId": "Webhook",
        "x-ms-visibility": "important",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetProjects",
              "value-path": "id",
              "value-title": "name"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "payload_url": {
                  "type": "string",
                  "description": "payload_url",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "Type",
                    "enum": [
                      "Comment",
                      "Client::Approval::Response",
                      "Client::Forward",
                      "Client::Reply",
                      "CloudFile",
                      "Document",
                      "GoogleDocument",
                      "Inbox::Forward",
                      "Message",
                      "Question",
                      "Question::Answer",
                      "Schedule::Entry",
                      "Todo",
                      "Todolist",
                      "Upload",
                      "Vault"
                    ]
                  },
                  "description": "types"
                }
              },
              "required": [
                "types",
                "payload_url"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/buckets/{projectId}/webhooks/{webhookId}.json": {
      "delete": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Delete a Webhook",
        "description": "Delete a Webhook",
        "operationId": "DeleteWebhook",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetProjects",
              "value-path": "id",
              "value-title": "name"
            }
          },
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      }
    }
  },
  "definitions": {
    "Tool": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "id"
        },
        "title": {
          "type": "string",
          "description": "title"
        },
        "name": {
          "type": "string",
          "description": "name"
        },
        "enabled": {
          "type": "boolean",
          "description": "enabled"
        },
        "position": {
          "type": "string",
          "description": "position"
        },
        "url": {
          "type": "string",
          "description": "url"
        },
        "app_url": {
          "type": "string",
          "description": "app_url"
        }
      }
    },
    "ClientCompany": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "id"
        },
        "name": {
          "type": "string",
          "description": "name"
        }
      },
      "description": "client_company"
    },
    "Webhook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "id"
        },
        "active": {
          "type": "string",
          "description": "active"
        },
        "created_at": {
          "type": "string",
          "description": "created_at"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at"
        },
        "payload_url": {
          "type": "string",
          "description": "payload_url"
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "types"
        },
        "url": {
          "type": "string",
          "description": "url"
        },
        "app_url": {
          "type": "string",
          "description": "app_url"
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "id"
        },
        "status": {
          "type": "string",
          "description": "status"
        },
        "created_at": {
          "type": "string",
          "description": "created_at"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at"
        },
        "name": {
          "type": "string",
          "description": "name"
        },
        "description": {
          "type": "string",
          "description": "description"
        },
        "purpose": {
          "type": "string",
          "description": "purpose"
        },
        "clients_enabled": {
          "type": "boolean",
          "description": "clients_enabled"
        },
        "bookmark_url": {
          "type": "string",
          "description": "bookmark_url"
        },
        "url": {
          "type": "string",
          "description": "url"
        },
        "app_url": {
          "type": "string",
          "description": "app_url"
        },
        "dock": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tool"
          },
          "description": "dock"
        },
        "bookmarked": {
          "type": "boolean",
          "description": "bookmarked"
        },
        "client_company": {
          "$ref": "#/definitions/ClientCompany"
        },
        "clientside": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "url"
            },
            "app_url": {
              "type": "string",
              "description": "app_url"
            }
          },
          "description": "clientside"
        }
      }
    },
    "CardList": {
      "type": "object",
      "properties": {
        "id": {"type": "integer"},
        "status": {"type": "string"},
        "visible_to_clients": {"type": "boolean"},
        "created_at": {"type": "string"},
        "updated_at": {"type": "string"},
        "title": {"type": "string"},
        "inherits_status": {"type": "boolean"},
        "type": {"type": "string"},
        "url": {"type": "string"},
        "app_url": {"type": "string"},
        "bookmark_url": {"type": "string"},
        "parent": {
          "type": "object",
          "properties": {
            "id": {"type": "integer"},
            "title": {"type": "string"},
            "type": {"type": "string"},
            "url": {"type": "string"},
            "app_url": {"type": "string"}
          }
        },
        "bucket": {
          "$ref": "#/definitions/Bucket"
        },
        "creator": {
          "$ref": "#/definitions/User"
        },
        "description": {"type": "string"},
        "subscribers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "color": {"type": "string"},
        "cards_count": {"type": "integer"},
        "comment_count": {"type": "integer"},
        "cards_url": {"type": "string"}
      }
    },
    "Card": {
      "type": "object",
      "properties": {
        "id": {"type": "integer", "format": "int64"},
        "status": {"type": "string"},
        "visible_to_clients": {"type": "boolean"},
        "created_at": {"type": "string"},
        "updated_at": {"type": "string"},
        "title": {"type": "string"},
        "inherits_status": {"type": "boolean"},
        "type": {"type": "string"},
        "url": {"type": "string"},
        "app_url": {"type": "string"},
        "bookmark_url": {"type": "string"},
        "subscription_url": {"type": "string"},
        "comments_count": {"type": "integer"},
        "comments_url": {"type": "string"},
        "position": {"type": "integer"},
        "parent": {
          "type": "object",
          "properties": {
            "id": {"type": "integer", "format": "int64"},
            "title": {"type": "string"},
            "type": {"type": "string"},
            "url": {"type": "string"},
            "app_url": {"type": "string"}
          }
        },
        "bucket": {
          "$ref": "#/definitions/Bucket"
        },
        "creator": {
          "$ref": "#/definitions/User"
        },
        "description": {"type": "string"},
        "completed": {"type": "boolean"},
        "content": {"type": "string"},
        "due_on": {"type": "string"},
        "assignees": {
          "type": "array", "items": {
            "$ref": "#/definitions/User"
          }
        },
        "completion_subscribers": {
          "type": "array", "items": {
            "$ref": "#/definitions/User"
          }
        },
        "completion_url": {"type": "string"},
        "comment_count": {"type": "integer"}
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {"type": "integer", "format": "int64"},
        "attachable_sgid": {"type": "string"},
        "name": {"type": "string"},
        "email_address": {"type": "string"},
        "personable_type": {"type": "string"},
        "title": {"type": "string"},
        "bio": {"type": "string"},
        "location": {"type": "string"},
        "created_at": {"type": "string"},
        "updated_at": {"type": "string"},
        "admin": {"type": "boolean"},
        "owner": {"type": "boolean"},
        "client": {"type": "boolean"},
        "employee": {"type": "boolean"},
        "time_zone": {"type": "string"},
        "avatar_url": {"type": "string"},
        "company": {
          "$ref": "#/definitions/ClientCompany"
        },
        "can_manage_projects": {"type": "boolean"},
        "can_manage_people": {"type": "boolean"}
      }
    },
    "Bucket": {
      "type": "object",
      "properties": {
        "id": {"type": "integer", "format": "int64"},
        "name": {"type": "string"},
        "type": {"type": "string"}
      }
    },
    "assignee_ids": {
      "type": "array",
      "description": "an array of people that will be assigned to item. Please see the Get people endpoints to retrieve them.",
      "title": "Assignee ids",
      "x-ms-visibility": "important",
      "items": {
        "type": "integer"
      }
    },
    "due_on": {
      "type": "string",
      "description": "due date (ISO 8601) of the card",
      "title": "Due on",
      "format": "date"
    },
    "notify": {
      "type": "boolean",
      "description": "whether to notify assignees, value true or false. Defaults to false.",
      "title": "Notify"
    },
    "card_title": {
      "type": "string",
      "description": "The title of the card",
      "title": "Title",
      "x-ms-visibility": "important"
    },
    "card_content": {
      "type": "string",
      "description": "containing information about the card.",
      "title": "Content",
      "x-ms-visibility": "important"
    },
    "todo_content": {
      "type": "string",
      "description": "for what the to-do is for.",
      "title": "Content",
      "x-ms-visibility": "important"
    },
    "todo_description": {
      "type": "string",
      "description": "containing information about the to-do. See our Rich text guide for what HTML tags allowed.",
      "title": "Description",
      "x-ms-visibility": "important"
    },
    "todo_starts_on": {
      "type": "string",
      "description": "allows the to-do to run from this date to the due_on date.",
      "title": "Starts on",
      "format": "date"
    },
    "todo_completion_subscriber_ids": {
      "type": "array",
      "description": "an array of people that will be notified on to-do completion. Please see the Get people endpoints to retrieve them.",
      "title": "Completion subscriber ids",
      "x-ms-visibility": "important",
      "items": {
        "type": "integer"
      }
    },
    "comment_content": {
      "type": "string",
      "description": "the body of the message. See our Rich text guide for what HTML tags are allowed.",
      "title": "Content",
      "x-ms-visibility": "important"
    }
  },
  "responses": {},
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://launchpad.37signals.com/authorization/new",
      "tokenUrl": "https://login.windows.net/common/oauth2/authorize",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2-auth": []
    }
  ],
  "tags": []
}